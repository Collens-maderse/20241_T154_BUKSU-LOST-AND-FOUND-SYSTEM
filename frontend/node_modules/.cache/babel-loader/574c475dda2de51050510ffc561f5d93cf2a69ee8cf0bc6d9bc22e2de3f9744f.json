{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenneth\\\\OneDrive\\\\Desktop\\\\test1\\\\frontend\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport '../styles/Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    userType: 'student'\n  });\n  const [recaptchaValue, setRecaptchaValue] = useState(null); // Store reCAPTCHA value\n  const [errorMessage, setErrorMessage] = useState(''); // Store error messages\n\n  // Handle reCAPTCHA change\n  const onRecaptchaChange = value => {\n    setRecaptchaValue(value);\n  };\n\n  // Form validation function\n  const validateForm = () => {\n    if (!formData.firstname || !formData.lastname || !formData.email || !formData.password) {\n      return 'All fields are required.';\n    }\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailPattern.test(formData.email)) {\n      return 'Please enter a valid email address.';\n    }\n    if (formData.password.length < 6) {\n      return 'Password must be at least 6 characters long.';\n    }\n    if (!recaptchaValue) {\n      return 'Please verify that you are not a robot.';\n    }\n    return ''; // No validation errors\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form\n    const validationError = validateForm();\n    if (validationError) {\n      setErrorMessage(validationError);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/register', formData);\n      alert('User registered successfully');\n      navigate('/login'); // Navigate to login on success\n    } catch (error) {\n      console.error('Registration failed', error);\n      setErrorMessage('Registration failed. Please try again.');\n    }\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    try {\n      // Send the Google credential to the backend for verification and registration\n      const response = await axios.post('http://localhost:5000/api/auth/google', {\n        token: credentialResponse.credential\n      });\n      if (response.data.success) {\n        navigate('/user-home');\n      }\n    } catch (error) {\n      console.error(\"Google signup failed\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"475680109157-79nfok0c0hfhilhddhljp3jk1jqh02vc.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"First Name\",\n          value: formData.firstname,\n          onChange: e => setFormData({\n            ...formData,\n            firstname: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Last Name\",\n          value: formData.lastname,\n          onChange: e => setFormData({\n            ...formData,\n            lastname: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.userType,\n          onChange: e => setFormData({\n            ...formData,\n            userType: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"staff\",\n            children: \"Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"faculty\",\n            children: \"Faculty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          sitekey: \"6LeWFX4qAAAAALBsKNJ-PITPdlzrAb5zH3aHs8bz\" // Your site key\n          ,\n          onChange: onRecaptchaChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleSuccess,\n        onError: () => console.log('Google login failed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"u+JZxfsmR7HDR9BYidgxAd5Zies=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","axios","useNavigate","ReCAPTCHA","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","firstname","lastname","email","password","userType","recaptchaValue","setRecaptchaValue","errorMessage","setErrorMessage","onRecaptchaChange","value","validateForm","emailPattern","test","length","handleSubmit","e","preventDefault","validationError","response","post","alert","error","console","handleGoogleSuccess","credentialResponse","token","credential","data","success","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","sitekey","onSuccess","onError","log","_c","$RefreshReg$"],"sources":["C:/Users/Kenneth/OneDrive/Desktop/test1/frontend/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport '../styles/Register.css';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    userType: 'student',\r\n  });\r\n  const [recaptchaValue, setRecaptchaValue] = useState(null); // Store reCAPTCHA value\r\n  const [errorMessage, setErrorMessage] = useState(''); // Store error messages\r\n\r\n  // Handle reCAPTCHA change\r\n  const onRecaptchaChange = (value) => {\r\n    setRecaptchaValue(value);\r\n  };\r\n\r\n  // Form validation function\r\n  const validateForm = () => {\r\n    if (!formData.firstname || !formData.lastname || !formData.email || !formData.password) {\r\n      return 'All fields are required.';\r\n    }\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailPattern.test(formData.email)) {\r\n      return 'Please enter a valid email address.';\r\n    }\r\n    if (formData.password.length < 6) {\r\n      return 'Password must be at least 6 characters long.';\r\n    }\r\n    if (!recaptchaValue) {\r\n      return 'Please verify that you are not a robot.';\r\n    }\r\n    return ''; // No validation errors\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate form\r\n    const validationError = validateForm();\r\n    if (validationError) {\r\n      setErrorMessage(validationError);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/register', formData);\r\n      alert('User registered successfully');\r\n      navigate('/login'); // Navigate to login on success\r\n    } catch (error) {\r\n      console.error('Registration failed', error);\r\n      setErrorMessage('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleGoogleSuccess = async (credentialResponse) => {\r\n    try {\r\n      // Send the Google credential to the backend for verification and registration\r\n      const response = await axios.post('http://localhost:5000/api/auth/google', {\r\n        token: credentialResponse.credential,\r\n      });\r\n      if (response.data.success) {\r\n        navigate('/user-home');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Google signup failed\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId=\"475680109157-79nfok0c0hfhilhddhljp3jk1jqh02vc.apps.googleusercontent.com\">\r\n      <div className=\"register\">\r\n        <h2>Create an Account</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Registration form fields */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n            value={formData.firstname}\r\n            onChange={(e) => setFormData({ ...formData, firstname: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Last Name\"\r\n            value={formData.lastname}\r\n            onChange={(e) => setFormData({ ...formData, lastname: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n          <select\r\n            value={formData.userType}\r\n            onChange={(e) => setFormData({ ...formData, userType: e.target.value })}\r\n          >\r\n            <option value=\"student\">Student</option>\r\n            <option value=\"staff\">Staff</option>\r\n            <option value=\"faculty\">Faculty</option>\r\n          </select>\r\n\r\n          {/* Add reCAPTCHA here */}\r\n          <ReCAPTCHA\r\n            sitekey=\"6LeWFX4qAAAAALBsKNJ-PITPdlzrAb5zH3aHs8bz\" // Your site key\r\n            onChange={onRecaptchaChange}\r\n          />\r\n\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n        <div className=\"divider\">or</div>\r\n        <GoogleLogin\r\n          onSuccess={handleGoogleSuccess}\r\n          onError={() => console.log('Google login failed')}\r\n        />\r\n      </div>\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}