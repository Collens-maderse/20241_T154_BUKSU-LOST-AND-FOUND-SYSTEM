{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenneth\\\\OneDrive\\\\Desktop\\\\test1\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import the new package\nimport axios from 'axios';\nimport ReCAPTCHA from 'react-google-recaptcha'; // Import ReCAPTCHA component\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  const [recaptchaValue, setRecaptchaValue] = useState(null); // Track the reCAPTCHA response\n\n  const navigate = useNavigate(); // Initialize navigate to redirect\n\n  const handleChange = e => {\n    setLoginData({\n      ...loginData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleRecaptchaChange = value => {\n    setRecaptchaValue(value); // Save the reCAPTCHA token\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // If reCAPTCHA hasn't been completed, don't proceed\n    if (!recaptchaValue) {\n      alert('Please complete the reCAPTCHA');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', {\n        ...loginData,\n        recaptchaValue\n      });\n      console.log('Response:', response.data); // Check the response data\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.token);\n        navigate('/user-home');\n      } else {\n        alert('Login failed');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message); // Log the error message\n      alert('Login failed');\n    }\n  };\n  const handleGoogleLoginSuccess = async response => {\n    const googleToken = response.credential; // This is the ID Token\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/google', {\n        token: googleToken\n      });\n      if (res.data.success) {\n        localStorage.setItem('token', res.data.token);\n        navigate('/user-home');\n      } else {\n        alert('Google login failed');\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error('Google login error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      alert('Google login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: loginData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: loginData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recaptcha-container\",\n        children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          sitekey: \"YOUR_RECAPTCHA_SITE_KEY\" // Replace with your actual reCAPTCHA site key\n          ,\n          onChange: handleRecaptchaChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-login\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleLoginSuccess,\n        onError: () => console.log('Login Failed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JMVvu5IiLY/gF7aILLmIBP8vuG0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","axios","ReCAPTCHA","jsxDEV","_jsxDEV","Login","_s","loginData","setLoginData","email","password","recaptchaValue","setRecaptchaValue","navigate","handleChange","e","target","name","value","handleRecaptchaChange","handleSubmit","preventDefault","alert","response","post","console","log","data","success","localStorage","setItem","token","error","_error$response","message","handleGoogleLoginSuccess","googleToken","credential","res","_error$response2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","sitekey","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/Kenneth/OneDrive/Desktop/test1/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';  // Import the new package\r\nimport axios from 'axios';\r\nimport ReCAPTCHA from 'react-google-recaptcha';  // Import ReCAPTCHA component\r\nimport '../styles/Login.css';\r\n\r\nconst Login = () => {\r\n  const [loginData, setLoginData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [recaptchaValue, setRecaptchaValue] = useState(null);  // Track the reCAPTCHA response\r\n\r\n  const navigate = useNavigate();  // Initialize navigate to redirect\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({\r\n      ...loginData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleRecaptchaChange = (value) => {\r\n    setRecaptchaValue(value);  // Save the reCAPTCHA token\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // If reCAPTCHA hasn't been completed, don't proceed\r\n    if (!recaptchaValue) {\r\n      alert('Please complete the reCAPTCHA');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', { ...loginData, recaptchaValue });\r\n      console.log('Response:', response.data);  // Check the response data\r\n      if (response.data.success) {\r\n        localStorage.setItem('token', response.data.token);\r\n        navigate('/user-home');\r\n      } else {\r\n        alert('Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response?.data || error.message);  // Log the error message\r\n      alert('Login failed');\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    const googleToken = response.credential; // This is the ID Token\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/google', { token: googleToken });\r\n      if (res.data.success) {\r\n        localStorage.setItem('token', res.data.token);\r\n        navigate('/user-home');\r\n      } else {\r\n        alert('Google login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Google login error:', error.response?.data || error.message);\r\n      alert('Google login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={loginData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={loginData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"recaptcha-container\">\r\n          <ReCAPTCHA\r\n            sitekey=\"YOUR_RECAPTCHA_SITE_KEY\"  // Replace with your actual reCAPTCHA site key\r\n            onChange={handleRecaptchaChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Login</button>\r\n      </form>\r\n\r\n      <div className=\"google-login\">\r\n        <GoogleLogin\r\n          onSuccess={handleGoogleLoginSuccess}\r\n          onError={() => console.log('Login Failed')}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}