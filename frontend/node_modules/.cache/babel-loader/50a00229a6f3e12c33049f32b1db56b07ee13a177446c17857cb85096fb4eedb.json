{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{GoogleLogin}from'@react-oauth/google';// Import the new package\nimport axios from'axios';import'../styles/Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[loginData,setLoginData]=useState({email:'',password:''});const navigate=useNavigate();// Initialize navigate to redirect\nconst handleChange=e=>{setLoginData({...loginData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('http://localhost:5000/api/auth/login',loginData);const{token,userType}=response.data;if(token){localStorage.setItem('token',token);// Redirect based on user type\nif(userType==='admin'){navigate('/admin');// Redirect to Admin Dashboard\n}else{navigate('/user-home');// Redirect to user homepage\n}}else{alert('Login failed: Invalid response from server.');}}catch(error){var _error$response,_error$response2;console.error('Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);alert('Login failed: '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data.message)||error.message));}};const handleGoogleLoginSuccess=async response=>{const googleToken=response.credential;// ID Token from Google\ntry{const res=await axios.post('http://localhost:5000/api/auth/google',{token:googleToken});const{success,token,userType}=res.data;if(success){localStorage.setItem('token',token);// Check userType to determine redirection\nif(userType==='admin'){navigate('/admin');// Redirect to admin page\n}else{navigate('/user-home');// Redirect to normal user page\n}}else{alert('Google login failed');}}catch(error){var _error$response3;console.error('Google login error:',((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);alert('Google login failed');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:loginData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:loginData.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Login\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"google-login\",children:/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:handleGoogleLoginSuccess,onError:()=>console.log('Login Failed')})})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","axios","jsx","_jsx","jsxs","_jsxs","Login","loginData","setLoginData","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","token","userType","data","localStorage","setItem","alert","error","_error$response","_error$response2","console","message","handleGoogleLoginSuccess","googleToken","credential","res","success","_error$response3","className","children","onSubmit","type","onChange","required","onSuccess","onError","log"],"sources":["C:/Users/Kenneth/OneDrive/Desktop/test1/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google'; // Import the new package\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\n\r\nconst Login = () => {\r\n  const [loginData, setLoginData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate(); // Initialize navigate to redirect\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({\r\n      ...loginData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', loginData);\r\n      const { token, userType } = response.data;\r\n  \r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n  \r\n        // Redirect based on user type\r\n        if (userType === 'admin') {\r\n          navigate('/admin'); // Redirect to Admin Dashboard\r\n        } else {\r\n          navigate('/user-home'); // Redirect to user homepage\r\n        }\r\n      } else {\r\n        alert('Login failed: Invalid response from server.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response?.data || error.message);\r\n      alert('Login failed: ' + (error.response?.data.message || error.message));\r\n    }\r\n  };\r\n  \r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    const googleToken = response.credential; // ID Token from Google\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/google', { token: googleToken });\r\n      const { success, token, userType } = res.data;\r\n\r\n      if (success) {\r\n        localStorage.setItem('token', token);\r\n\r\n        // Check userType to determine redirection\r\n        if (userType === 'admin') {\r\n          navigate('/admin'); // Redirect to admin page\r\n        } else {\r\n          navigate('/user-home'); // Redirect to normal user page\r\n        }\r\n      } else {\r\n        alert('Google login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Google login error:', error.response?.data || error.message);\r\n      alert('Google login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={loginData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={loginData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Login</button>\r\n      </form>\r\n\r\n      <div className=\"google-login\">\r\n        <GoogleLogin\r\n          onSuccess={handleGoogleLoginSuccess}\r\n          onError={() => console.log('Login Failed')}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}