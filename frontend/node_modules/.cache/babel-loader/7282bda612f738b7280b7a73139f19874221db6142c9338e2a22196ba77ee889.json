{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenneth\\\\OneDrive\\\\Desktop\\\\test1\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\";\n// components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element\n}) => {\n  const isAuthenticated = localStorage.getItem('token'); // Check if token exists in localStorage\n\n  return isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 38\n  }, this); // If authenticated, show element else redirect to login\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","element","isAuthenticated","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kenneth/OneDrive/Desktop/test1/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// components/ProtectedRoute.jsx\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ element }) => {\r\n  const isAuthenticated = localStorage.getItem('token');  // Check if token exists in localStorage\r\n\r\n  return isAuthenticated ? element : <Navigate to=\"/login\" />;  // If authenticated, show element else redirect to login\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;;EAExD,OAAOF,eAAe,GAAGD,OAAO,gBAAGF,OAAA,CAACF,QAAQ;IAACQ,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAE;AAChE,CAAC;AAACC,EAAA,GAJIV,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}