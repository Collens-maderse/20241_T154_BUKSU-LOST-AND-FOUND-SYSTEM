{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  const {\n    email,\n    password\n  } = loginData;\n  try {\n    const endpoint = 'http://localhost:5000/api/auth/login'; // Regular user login\n\n    const res = await axios.post(endpoint, {\n      email,\n      password\n    });\n    const {\n      token,\n      userType\n    } = res.data;\n    if (token) {\n      localStorage.setItem('token', token);\n\n      // Redirect based on user type\n      if (userType === 'admin') {\n        navigate('/admin'); // Admin page\n      } else {\n        navigate('/user-home'); // Regular user home page\n      }\n    } else {\n      alert('Login failed: Invalid response from server.');\n    }\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    alert('Login failed: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","email","password","loginData","endpoint","res","axios","post","token","userType","data","localStorage","setItem","navigate","alert","error","_error$response","_error$response2","_error$response2$data","console","response","message"],"sources":["C:/Users/Kenneth/OneDrive/Desktop/test1/frontend/src/App.js"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  const { email, password } = loginData;\n\n  try {\n    const endpoint = 'http://localhost:5000/api/auth/login'; // Regular user login\n\n    const res = await axios.post(endpoint, { email, password });\n    const { token, userType } = res.data;\n\n    if (token) {\n      localStorage.setItem('token', token);\n\n      // Redirect based on user type\n      if (userType === 'admin') {\n        navigate('/admin'); // Admin page\n      } else {\n        navigate('/user-home'); // Regular user home page\n      }\n    } else {\n      alert('Login failed: Invalid response from server.');\n    }\n  } catch (error) {\n    console.error('Error:', error.response?.data || error.message);\n    alert('Login failed: ' + (error.response?.data?.message || error.message));\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGC,SAAS;EAErC,IAAI;IACF,MAAMC,QAAQ,GAAG,sCAAsC,CAAC,CAAC;;IAEzD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAACH,QAAQ,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC3D,MAAM;MAAEM,KAAK;MAAEC;IAAS,CAAC,GAAGJ,GAAG,CAACK,IAAI;IAEpC,IAAIF,KAAK,EAAE;MACTG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;;MAEpC;MACA,IAAIC,QAAQ,KAAK,OAAO,EAAE;QACxBI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM;QACLA,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC,MAAM;MACLC,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACJ,KAAK,CAAC,QAAQ,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACK,QAAQ,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBN,IAAI,KAAIK,KAAK,CAACM,OAAO,CAAC;IAC9DP,KAAK,CAAC,gBAAgB,IAAI,EAAAG,gBAAA,GAAAF,KAAK,CAACK,QAAQ,cAAAH,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBG,OAAO,KAAIN,KAAK,CAACM,OAAO,CAAC,CAAC;EAC5E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}