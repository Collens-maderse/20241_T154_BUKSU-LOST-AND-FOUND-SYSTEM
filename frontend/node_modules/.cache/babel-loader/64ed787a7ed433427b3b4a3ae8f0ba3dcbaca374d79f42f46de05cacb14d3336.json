{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenneth\\\\OneDrive\\\\Desktop\\\\test1\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google'; // Import the new package\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate(); // Initialize navigate to redirect\n\n  const handleChange = e => {\n    setLoginData({\n      ...loginData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        userType\n      } = response.data;\n      if (token) {\n        localStorage.setItem('token', token);\n\n        // Redirect based on user type\n        if (userType === 'admin') {\n          navigate('/admin'); // Redirect to Admin Dashboard\n        } else {\n          navigate('/user-home'); // Redirect to user homepage\n        }\n      } else {\n        alert('Login failed: Invalid response from server.');\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Login failed: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) || error.message));\n    }\n  };\n  const handleGoogleLoginSuccess = async response => {\n    const googleToken = response.credential; // ID Token from Google\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/google', {\n        token: googleToken\n      });\n      const {\n        success,\n        token,\n        userType\n      } = res.data;\n      if (success) {\n        localStorage.setItem('token', token);\n\n        // Check userType to determine redirection\n        if (userType === 'admin') {\n          navigate('/admin'); // Redirect to admin page\n        } else {\n          navigate('/user-home'); // Redirect to normal user page\n        }\n      } else {\n        alert('Google login failed');\n      }\n    } catch (error) {\n      var _error$response3;\n      console.error('Google login error:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      alert('Google login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: loginData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: loginData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-login\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleLoginSuccess,\n        onError: () => console.log('Login Failed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wXTNz4VB4OFzVX6aIYF7Rb+oqR0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","axios","jsxDEV","_jsxDEV","Login","_s","loginData","setLoginData","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","res","post","token","userType","response","data","localStorage","setItem","alert","error","_error$response","_error$response2","console","message","handleGoogleLoginSuccess","googleToken","credential","success","_error$response3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onSuccess","onError","log","_c","$RefreshReg$"],"sources":["C:/Users/Kenneth/OneDrive/Desktop/test1/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google'; // Import the new package\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\n\r\nconst Login = () => {\r\n  const [loginData, setLoginData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate(); // Initialize navigate to redirect\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({\r\n      ...loginData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n      const { token, userType } = response.data;\r\n  \r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n  \r\n        // Redirect based on user type\r\n        if (userType === 'admin') {\r\n          navigate('/admin'); // Redirect to Admin Dashboard\r\n        } else {\r\n          navigate('/user-home'); // Redirect to user homepage\r\n        }\r\n      } else {\r\n        alert('Login failed: Invalid response from server.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response?.data || error.message);\r\n      alert('Login failed: ' + (error.response?.data.message || error.message));\r\n    }\r\n  };\r\n  \r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    const googleToken = response.credential; // ID Token from Google\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/google', { token: googleToken });\r\n      const { success, token, userType } = res.data;\r\n\r\n      if (success) {\r\n        localStorage.setItem('token', token);\r\n\r\n        // Check userType to determine redirection\r\n        if (userType === 'admin') {\r\n          navigate('/admin'); // Redirect to admin page\r\n        } else {\r\n          navigate('/user-home'); // Redirect to normal user page\r\n        }\r\n      } else {\r\n        alert('Google login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Google login error:', error.response?.data || error.message);\r\n      alert('Google login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={loginData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={loginData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Login</button>\r\n      </form>\r\n\r\n      <div className=\"google-login\">\r\n        <GoogleLogin\r\n          onSuccess={handleGoogleLoginSuccess}\r\n          onError={() => console.log('Login Failed')}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}